---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: openshift-provision-manager
  name: openshift-provision-manager

parameters:
- name: OPENSHIFT_PROVISION_NAMESPACE
  value: openshift-provision
- name: MANAGER_DEPLOYMENT_NAME
  value: manager
- name: MANAGER_SERVICE_NAME
  value: manager
- name: IMAGE_BASE
  value: docker.io/gnuthought/
- name: MANAGER_IMAGE
  value: openshift-provision-manager:latest
- name: RUNNER_IMAGE
  value: openshift-provision-manager:latest

objects:
- apiVersion: project.openshift.io/v1
  kind: Project
  metadata:
    name: ${OPENSHIFT_PROVISION_NAMESPACE}
    annotations:
      openshift-provision/action: create
  spec:
    finalizers:
    - kubernetes

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${MANAGER_SERVICE_NAME}
    namespace: ${OPENSHIFT_PROVISION_NAMESPACE}

- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: openshift-provision-manager-edit
    namespace: ${OPENSHIFT_PROVISION_NAMESPACE}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${MANAGER_SERVICE_NAME}
    namespace: ${OPENSHIFT_PROVISION_NAMESPACE}

- apiVersion: v1
  kind: Service
  metadata:
    name: ${MANAGER_SERVICE_NAME}
    namespace: ${OPENSHIFT_PROVISION_NAMESPACE}
  spec:
    ports:
    - name: api
      port: 5000
      protocol: TCP
      targetPort: 5000
    - name: metrics
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      component: ${MANAGER_DEPLOYMENT_NAME}
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Route
  metadata:
    name: ${MANAGER_SERVICE_NAME}
  spec:
    port:
      targetPort: api
    tls:
      termination: edge
    to:
      kind: Service
      name: ${MANAGER_SERVICE_NAME}
      weight: 100
    wildcardPolicy: None

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/display-name: openshift-provision-manager
    name: openshift-provision-manager
    namespace: openshift
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        description: openshift-provision-manager
        openshift.io/display-name: openshift-provision-manager
        tags: openshift-provision-manager
      from:
        kind: DockerImage
        name: ${IMAGE_BASE}${MANAGER_IMAGE}
      importPolicy:
        scheduled: true
      name: latest
      referencePolicy:
        type: Local

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/display-name: openshift-provision-runner
    name: openshift-provision-runner
    namespace: openshift
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        description: openshift-provision-runner
        openshift.io/display-name: openshift-provision-runner
        tags: openshift-provision-runner
      from:
        kind: DockerImage
        name: ${IMAGE_BASE}${RUNNER_IMAGE}
      importPolicy:
        scheduled: true
      name: latest
      referencePolicy:
        type: Local

- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      component: ${MANAGER_DEPLOYMENT_NAME}
    name: ${MANAGER_DEPLOYMENT_NAME}
    namespace: ${OPENSHIFT_PROVISION_NAMESPACE}
  spec:
    replicas: 1
    selector:
      matchLabels:
        component: ${MANAGER_DEPLOYMENT_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          component: ${MANAGER_DEPLOYMENT_NAME}
      spec:
        containers:
        - name: manager
          env:
          - name: RUNNER_IMAGE
            value: docker-registry.default.svc:5000/openshift/openshift-provision-runner:latest
          image: docker-registry.default.svc:5000/openshift/openshift-provision-manager:latest
          imagePullPolicy: Always
          # FIXME - Add probes
          #livenessProbe:
          #readinessProbe:
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        securityContext: {}
        serviceAccountName: ${MANAGER_SERVICE_NAME}
        terminationGracePeriodSeconds: 30

- apiVersion: authorization.openshift.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      openshift.io/description: >
        Access to manage project quotas and limit ranges. This role is meant for
        assignment at the project level and does not include the ability to
        manage OpenShift cluster resource quotas.
    name: resource-manager
  rules:
  - apiGroups:
    - ""
    attributeRestrictions: null
    resources:
    - limitranges
    - resourcequotas
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    attributeRestrictions: null
    resources:
    - resourcequotas/status
    - resourcequotausages
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - quota.openshift.io
    attributeRestrictions: null
    resources:
    - appliedclusterresourcequotas
    verbs:
    - get
    - list
    - watch
